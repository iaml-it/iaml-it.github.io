[
  {
    "path": "posts/2021-04-28-transformers-in-vision/",
    "title": "Transformers in Vision",
    "description": "What have Transformers been up to?",
    "author": [
      {
        "name": "Niccolò Zanichelli",
        "url": "https://twitter.com/nickz_42"
      }
    ],
    "date": "2021-04-28",
    "categories": [],
    "contents": "\nIntroduction\nInitially introduced with the now-famous Attention is all you need1, the Transformer has dominated the field of Natural Language Processing (NLP) for years. Particularly worth noting is the effort gone into scaling up Transformer-based models, such as BERT2, MegatronLM3, T54, and the various GPTs5–7, due to their favourable scaling characteristics8,9.\nThe success of transformers in NLP has not gone unnoticed in other fields, where they have been responsible for significant breakthroughs such as AlphaFold 2 in the field of protein folding.\nImportant works adapting transformers (and self-attention) to vision include Attention Augmented Convolutional Networks,10 Stand-Alone Self-Attention models11 (SASA models), DETR12, Visual Transformers13 and LambdaNetworks14; as well as Image Transformers15 and Axial Transformers16 in the generative domain.\nFor an in-depth introduction to these works, we recommend two recent reviews: A Survey in Visual Transformers17 and Transformers in Vision: A Survey18.\nOverview\nThis blog post aims to summarize recent research in applying transformers and self-attention to vision, with a focus on (but scope not limited to) image classification. While by no means exhaustive, it can hopefully represent a starting point for a more in-depth dive into the literature.\nWe first introduce the Vision Transformer, a simple yet powerful architecture that has had a significant influence on recent research due to its performance in large data regimes. We then continue with the many works studying how to achieve similar high performance using transformers (and self-attention) when data is not as plentiful. Finally, we discuss papers studying the robustness of these models to perturbations as well as their performance in self-supervised, medical and video tasks.\nFigures are taken from their respective papers unless the source is explicitly provided in the caption.\nBefore we begin, it is worth noting that familiarity with transformers and self-attention is recommended; great resources include Jay Alammar’s Illustrated Transformer and Peter Bloem’s Transformers from scratch. For high-quality implementations of many models discussed in this post, check out Ross Wightman’s PyTorch Image Models as well as Phil Wang’s work.\nAn image is worth 16x16 words: the Vision Transformer\nFirst introduced in An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale19, Vision Transformers (ViTs) have taken computer vision by storm, leading to hundreds of citations in the span of a few months. The paper’s main goal was to show that a vanilla Transformer, once adapted to deal with data from the visual domain, could compete with some of the most performant convolutional neural networks (CNNs) developed up to that point.\nThe Vision Transformer architecture is conceptually simple: divide the image into patches, flatten and project them into a \\(D\\)-dimensional embedding space obtaining the so-called patch embeddings, add positional embeddings (a set of learnable vectors allowing the model to retain positional information) and concatenate a (learnable) class token, then let the Transformer encoder do its magic. Finally, a classification head is applied to the class token to obtain the model’s logits.\n\n\n\n\nFigure 1: A Vision Transformer classifying an image. Source.\n\n\n\n\nThe model’s performance was acceptable when trained on ImageNet (\\(1\\)M images), great when pre-trained on ImageNet-21k (\\(14\\)M images), and state-of-the-art when pre-trained on Google’s internal JFT-300M dataset (\\(300\\)M images).\nThe striking performance improvement was due to the reduced inductive bias that characterizes Vision Transformers. By making fewer assumptions about the data, Vision Transformers could better adapt themselves to the given task. However, this ability came at a cost – when the sample size was too small (such as in the ImageNet case), the models overfit, resulting in degraded performance.\nThe goal for many follow-up papers would be that of matching (and surpassing) the performance of the best convolutional models in the “small” data regime – ImageNet (which is after all over a million images) and below.\nStronger data augmentation allows more efficient learning\nTraining data-efficient image transformers & distillation through attention20 was the first paper to show that models based on ViTs could be competitive on ImageNet without access to additional data.\nThe paper has two main contributions:\nA novel training recipe (referred to below as the DeiT recipe), characterized by more substantial data augmentation and stochastic depth21. These changes introduce additional regularization limiting ViT’s tendency to overfit in the small data regime, thus boosting its performance. The authors recommend the use of Rand-Augment22, Mixup23, CutMix24, and Random Erasing25; they also recommend not to use DropOut26.\nHard-label distillation. In this approach, an additional learnable token, called the distillation token, is concatenated to the patch embeddings. The model is then trained with the loss function \\[\\mathcal{L}_{hardDistill}=\\frac{1}{2}\\mathcal{L}_{CE}(\\sigma(Z_{cls}), y_{true}) + \\frac{1}{2}\\mathcal{L}_{CE}(\\sigma(Z_{distill}), y_{teacher})\\] where \\(\\mathcal{L}_{CE}\\) is the cross-entropy loss function, \\(\\sigma\\) is the softmax function, \\(Z_{cls}\\) and \\(Z_{distill}\\) are the student model’s logits derived respectively from the class and distillation tokens, and \\(y_{true}\\) and \\(y_{teacher}\\) are respectively the true and the teacher’s hard labels. This distillation technique allows the model to learn even when the combination of multiple strong data augmentations causes the provided label to be imprecise, as the teacher network will produce the most probable label. Interestingly, the authors found CNNs to be better teacher networks than other Vision Transformers.\n\n\n\n\nFigure 2: The Data efficient image Transformer hard-label distillation procedure.\n\n\n\n\nThe resulting models, called Data efficient image Transformers (DeiTs), were competitive with EfficientNet on the accuracy/step time trade-off, proving that ViT-based models could compete with highly performant CNNs even in the ImageNet data regime. It is however worth noting that DeiTs performed much worse than EfficientNets27 in terms of accuracy/parameters and accuracy/FLOPs.\nIncorporating relative Self-Attention in ResNet design\nBottleneck Transformers for Visual Recognition28 investigated a family of hybrid convolution and attention models obtained by incorporating Multi-Head Self-Attention (MHSA) in ResNet designs. In particular, the authors showed that by simply replacing the \\(3\\times 3\\) convolutions with relative position MHSA layers in the bottleneck blocks of the last stage of a ResNet, it was possible to obtain an improvement over several baselines.\nOnce additional bells-and-whistles were added, such as Squeeze-and-Excite layers29 and SiLU non-linearities30, the models (that the authors call Bottleneck Transformer Networks or BoTNets) demonstrated favorable scaling, outperforming EfficientNets in the accuracy/step-time trade-off beyond 83% top-1 accuracy. The worse performance of small BoTNet models could be due to the fact that the authors do not employ the DeiT training recipe to combat overfitting.\nFurther, the use of ResNet blocks in the initial stages to efficiently learn lower resolution feature maps allowed the models to perform well in both instance segmentation and object detection tasks, where high-resolution images are typical.\nConditional Positional Encodings\nConditional Positional Encodings for Vision Transformers31 studied alternatives to the positional embeddings and class token used in ViTs. In particular, the paper proposes the use of Positional Encodings Generators (PEGs), a module that produces positional encodings dynamically, and the use of global average pooling as an alternative to the (non-translation-invariant) class token.\nPEGs reshape the flattened input sequence to 2D, apply a series of convolutional layers (the authors use depthwise separable convolutions) with zero-padding, and flatten the result. Positional information is thus introduced by the presence of zero-padding, unlike in ViTs, where 1D learnable positional embeddings are used. The method has two main advantages: * The model is now translation invariant. * The model can now be used as-is on higher resolutions, unlike normal ViTs that require rescaling of the positional embeddings before fine-tuning.\n\n\n\n\nFigure 3: The Positional Encoding Generator (PEG) module architecture.\n\n\n\n\nThe resulting models, called Conditional Positional Encoding Vision Transformers (CPVTs), are trained with the DeiT recipe and obtain a small boost in performance (particularly when tested on higher resolution images without fine-tuning).\nModeling the local patch structure\nTransformer in Transformer32 (TNT) studied the importance of intra-patch structure by introducing an additional transformer block, dedicated to pixel embeddings, inside the transformer blocks used in ViT.\n\n\n\n\nFigure 4: The Transformer in Transformer (TNT) architecture.\n\n\n\n\nThe output of the inner transformer block is both sent as-is to the next layer and adapted for use in the outer transformer block which can now take into account both inter patch relationships (like ViT does) and intra-patch structure. The authors also introduced a separate set of positional embeddings, added to the pixel embeddings before entering the encoder.\nThe models, trained with the DeiT recipe, outperformed both ViTs and DeiTs on ImageNet, achieving higher parameter and FLOP efficiency, although not quite as high as EfficientNet’s.\nDeeper and deeper with Vision Transformers\nDeepViT: Towards Deeper Vision Transformer33 investigated how the performance of ViTs changed with increasing depth. After 24 transformer blocks, the authors discovered that adding additional blocks did not lead to improved performance, as both the feature maps and the attention matrices end up being remarkably similar to each other, a problem they name Attention Collapse.\nTo solve this issue, the authors proposed a simple variant of self-attention that they call Re-Attention, characterized by a learnable transformation matrix \\(\\Theta \\in R^{H \\times H}\\) (where \\(H\\) is the number of attention heads) applied directly after the softmax. This matrix (which is shared throughout the network but that can also be layer-specific) allows the model to establish cross-head communication, diminishing inter-layer feature map similarity.\nThe authors also reported positive results following an approach similar to the one proposed in LazyFormer34: reusing the attention matrix for the last half of the network caused no degradation in performance.\n\n\n\n\nFigure 5: Attention and feature map cross layer similarity (left); ViT and DeepViT comparison (right).\n\n\n\n\nThe resulting models, called Deep Vision Transformers (DeepViTs), are characterized by better performance as depth increases.\nGoing deeper with Image Transformers35 identified two main issues in DeiT models: the lack of performance improvement (and even performance degradation) at increased network depth and the double objective that characterizes the transformer encoder, which has to model both inter-patch relationships as well as that between the class token and the patch embeddings. To demonstrate the latter, the authors show that a DeiT where the class token is inserted later on in the network outperforms a normal DeiT.\nTwo main contributions characterize the paper: * LayerScale, a novel normalization strategy applied to residual branches. * Class-attention layers, a layer dedicated to the efficient extraction of information relevant to the classification task from the processed patch embeddings.\nLayerScale is characterized by a layer-specific set of learnable diagonal matrices, whose diagonal values are initialized to a small \\(\\epsilon\\), applied to the output of every residual branch. It is conceptually similar to methods like FixUp36 and SkipInit37 but provides the model with more freedom since it is per-channel (unlike other methods that only use a single scalar).\nAs mentioned before, Class-attention layers allow efficient extraction of information from processed patch embeddings. The authors find it a better alternative than the simple late-stage insertion of the class token and global average pooling, achieving the same accuracy with lower computational costs.\n\n\n\n\nFigure 6: ViT (left), late class token ViT (center) and CaiT (right).\n\n\n\n\nThe authors also proposed the use of additional bells and whistles, such as Talking Heads Attention38.\nThe resulting models, called Class-attention image Transformers (CaiTs), achieved notable performance on the ImageNet benchmark. CaiTs even outperform the recent NFNets39 in both the accuracy/parameters trade-off and the accuracy/FLOPs trade-off when using both the DeiT training recipe as well as the DeiT distillation technique.\nConvolutional insights\nConViT: Improving Vision Transformers with Soft Convolutional Inductive Biases40 investigated the exciting possibility of initializing self-attention blocks with soft convolutional biases. Basing their work on studies regarding the theoretical relationship between self-attention and convolutional layers41, the authors introduced Gated Positional Self-Attention (GPSA), a variant of self-attention which is characterized by the possibility of being initialized with a locality bias.\nMore precisely, the initialization of a GPSA block is parameterized by a head-specific center of attention (the position to which the head pays most attention to, given the query patch) and a locality strength (which determines how focused every head is around its center of attention). GPSA blocks also employ a gating mechanism to better balance content and positional information. By appropriately setting the centers of attention and the locality strength of GPSA blocks, the model can compete with CNNs in the low data regime and at the same time enjoy ViT-like expressive power in large data regimes.\n\n\n\n\nFigure 7: Input image (top left), attention maps of an untrained SA block (top right) and GPSA blocks (center and bottom).\n\n\n\n\nThe authors demonstrated the effectiveness of this elegant approach through an empirical study comparing DeiTs to the resulting models, which they named Convolutional Vision Transformers (ConViTs): on ImageNet ConViTs enjoy progressively superior performance as the sample size is diminished while retaining DeiT-like performance at full sample size.\nTwo more papers exploring the application of convolutional insights to Vision Transformers are Incorporating Convolution Designs into Visual Transformers42 and LocalViT: Bringing Locality to Vision Transformers43.\nThe first paper has three main contributions: * The Image-to-Tokens (I2T) stem, substituting ViT’s convolutional stem and characterized by the addition of a max-pooling operation followed by batch normalization. * The Locally enhanced Feedforward block, substituting ViT’s feedforward block and characterized by the use of depthwise convolutions and batch normalization. * The Layer-wise Class-Token Attention, which is applied at the end of the network and attends unidirectionally to all class tokens throughout the network.\nThe authors adopted the DeiT training recipe; their models, called Convolution-enhanced image Transformers (CeiTs), obtained superior results against both same-size DeiT models and same-size distilled DeiT models.\nThe second paper also studied the application of depth-wise convolutions in the feedforward networks while ablating the use of different activation functions and the application of Squeeze-and-Excite layers.\nThe authors applied this approach to several models, obtaining favorable results.\nThe importance of Hierarchy\nSeveral papers have studied the application of a hierarchical structure to Vision Transformers.\nTokens-to-Token ViT: Training Vision Transformers from Scratch on ImageNet44 introduced the Token-to-Token module (T2T), a module that reshapes the input sequence to a 2D structure, applies a soft split (allowing overlapping patches), and flattens the resulting patches. By adjusting the patch size used in the module, the length of the token sequences diminishes progressively throughout the network.\n*\n\n The Token-to-Token module\n\n\nThe authors obtained favorable results, with performance comparable to that of MobileNets45.\nPyramid Vision Transformer: A Versatile Backbone for Dense Prediction without Convolutions46 introduced a variant of Self-Attention called spatial-reduction attention (SRA), characterized by spatial reduction of both keys and values. By applying SRA at the end of several stages, the spatial dimensions of the feature map slowly decrease throughout the model. The resulting models, called Pyramid Vision Transformers (PVTs), can deal with a variety of tasks, including dense prediction, object detection, and semantic segmentation, where high-resolution images are typical.\n*\n\n The Pyramid Vision Transformer.\n\n\nScalable Visual Transformers with Hierarchical Pooling47 explored the use of max-pooling to diminish the sequence length progressively. The authors also replaced the class token used in ViT with a final global average pooling layer. The resulting models, called Hierarchical Vision Transformers (HVTs), are trained with the DeiT recipe and scaled up (in the embedding dimension and number of heads) to have a comparable computational cost to DeiTs, achieving gains in the low (sub \\(5\\)) GFLOPs regime.\nSwin Transformer: Hierarchical Vision Transformer using Shifted Windows48 suggested a different route: use local self-attention inside (non-overlapping, local) windows, allow cross-window communication through so-called shifted window partitioning, and produce a hierarchical representation by progressively merging the windows themselves.\n*\n\n The Swin Transformer shifted window partitioning.\n\n\nIn the last stage of the network, all local windows have been merged, resulting in blocks effectively using global self-attention on a feature map whose spatial dimensions have been significantly decreased. It’s worth noting that this approach scales linearly with image size.\n*\n\n Swin Transformer (left) and ViT (right). Attention is applied on patches (black) inside windows (red).\n\n\nThe authors also reported positive results applying T5-style relative positional bias in attention blocks and obtained promising results both on ImageNet and ImageNet-21k, as well as in object detection and semantic segmentation tasks.\nRethinking Spatial Dimensions of Vision Transformers49 introduced a novel pooling layer, characterized by a depthwise convolution (for patch embeddings) and a fully connected layer (for the class token). This simple change allowed the models, named Pooling-based vIsion Transformers (PiTs), to outperform vanilla Vision Transformers in the ImageNet data regime.\nLeViT: a Vision Transformer in ConvNet’s Clothing for Faster Inference50 studied a hybrid architecture characterized by a longer convolutional stem and shrink attention blocks that progressively diminish the spatial dimensions of the feature maps throughout the network. The authors also proposed the use of global average pooling instead of the class token, the injection of positional information through attention bias, and the addition of a GELU activation51 in the attention block.\nThe authors named the models LeViTs, trained them using both the DeiT training recipe and the DeiT distillation procedure, and showed that the networks are capable of high-speed inference, outperforming EfficientNets and DeiTs in the accuracy/step-time trade-off, on both GPU and CPU.\nMulti-Scale features and Cross-Attention\nCrossViT: Cross-Attention Multi-Scale Vision Transformer for Image Classification52 proposed the use of multi-scale features by adapting the Vision Transformer to have two branches: * A large (or primary) one characterized by large patch size, deep transformer encoder, and wide embedding dimension. * A small (or complementary) one characterized by smaller patch size, shallower encoder, and narrower embedding dimension.\nThe branches employ two separate class tokens. Late in the network (after a separate set of positional embeddings is added), cross-branch communication is established through the use of Cross-Attention Fusion blocks.\nIn particular, inside cross-attention fusion blocks, class tokens are concatenated to the patch embeddings of the other branch and processed by attention before being returned to their respective branch.\n*\n\n The Cross-Attention fusion layer for the large branch.\n\n\nThe output of MLP heads based on the large and small branches tokens is then added together to generate the model’s logits.\nThe resulting models, which the authors named CrossViTs, are trained with the DeiT recipe and enjoy significant performance boosts, achieving better performance than DeiTs twice as large and twice as computationally expensive.\nIntegrating convolutions in attention\nCvT: Introducing Convolutions to Vision Transformers53 can be seen as a complementary approach to Bottleneck Transformers, where instead of using multi-head self-attention inside of a CNN’s final blocks, convolutions (in this case, depthwise separable ones54) are used inside a Vision Transformer’s self-attention blocks. More precisely, Convolutional vision Transformers (CvTs, whose full-name conflicts with ConViTs) are characterized by two main features:\nThe Convolutional Token Embedding, a module characterized by a strided convolution and inserted at the beginning of every stage.\nThe Convolutional Projection(s) in the attention blocks. These projections, implemented through depthwise separable convolutions, allow queries, keys, and values to be influenced by neighboring tokens. Further, larger strides for keys and values diminish the tokens spatial dimensions, decreasing the associated parameters count and computational cost.\n\n*\n\n The (strided) Convolutional Projections.\n\n\nThese two features allow the model to progressively reduce the tokens feature and spatial dimensions, allowing CvTs to adopt a hierarchical multi-stage architecture.\nIt’s worth noting that CvTs do not employ positional embeddings since positional information is retained through the use of convolutions both in the embedding layers as well as in the attention blocks.\nThe authors adopted the original ViT training recipe and achieved competitive performance when training CvTs on ImageNet. The largest model presented (CvT-W24), once pre-trained on ImageNet-21k, obtained a stunning \\(87.7\\%\\) top-1 accuracy, outperforming BiT-L (an ensemble of CNNs pre-trained on \\(20\\) times more data) with a fraction of parameters and compute.\nMulti-Scale Vision Longformer: A New Vision Transformer for High-Resolution Image Encoding55 introduced a 2D version of Longformer56, which the authors call Vision Longformer. Conceptually, it is characterized by two different sets of tokens: a set of global tokens, allowed to attend to all tokens, and local tokens, only allowed to attend to global tokens and tokens spatially close to them.\n*\n\n Global and local tokens in Multi-Scale Vision Longformers.\n\n\nIt’s worth noting that, at least in vision-only tasks, global tokens are discarded at the end of every attention block (while local tokens are reshaped and passed to the next one), since they have at that point already fulfilled their role of allowing efficient communication between spatially distant tokens.\nThe authors adopted DeiT-style training and achieved impressive parameter and FLOP efficiency.\nHaloing and Strided local Self-Attention\nScaling Local Self-Attention for Parameter Efficient Visual Backbones57 builds on top of SASA models, by developing a local self-attention-only family of models made more efficient by the newly introduced haloing operation.\nMore precisely, the authors introduced a novel strategy called Blocked Self-Attention: input is first divided into blocks (which will be used as queries), and neighboring pixels are banded together and padded, in an operation denominated haloing, to generate keys and values. Finally, attention is applied.\n*\n\n Blocked local Self-Attention as used in HaloNets.\n\n\nIt’s worth noting that this operation causes layers not to be translationally equivariant, but the authors took this route to obtain higher hardware utilization.\nThe network assumes a hierarchical structure thanks to a strided version of self-attention that is applied at the end of every stage (thus replacing SASA models post-attention average pooling).\nThe resulting models, called HaloNets, achieved extremely high parameter efficiency, slightly surpassing EfficientNets, a feat not obtained by any other model thus far. It’s worth, however, noting that HaloNets have a longer step-time, particularly when using larger configurations.\nSecond-order pooling\nSo-ViT: Mind Visual Tokens for Vision Transformer58 recently proposed the use of second-order pooling to extract high-level information from visual tokens (that is all tokens apart from the class one). The model’s logits are finally obtained by summing up the output of two separate linear heads, one applied to the class token, and one applied to the pooled features.\n*\n\n So-ViT architecture.\n\n\nThe resulting models, named Second-order ViTs (So-ViTs), are trained with an expanded DeiT recipe, and obtain competitive results.\nComparison on Image Classification\nBefore continuing, we recap the reported performance of most models presented up to this point.\nTo provide a fair comparison, we only consider models trained at the same resolution (\\(224 \\times 224\\)) apart from ViTs that were trained at \\(384 \\times 384\\). We also denote models fine-tuned at higher (\\(384\\times384\\)) resolution with an upward arrow, and exclude models trained for more than \\(400\\) epochs or using the DeiT hard-label distillation technique, because only the DeiT, T2T, and CaiT papers report results using it.\nWe follow An Analysis of Deep Neural Network Models for Practical Applications59 in graphing ImageNet top-1 accuracy vs. FLOPs and parameter count.\n\n\n\n\n\n\nIt’s worth keeping in mind that FLOP use and parameter count are not necessarily representative of latency or memory consumption.\nAs the recent ResNet-RS paper [Bello et al.; 2021] explains, “in custom hardware architectures (e.g. TPUs and GPUs), operations are often bounded by memory access costs and have different levels of optimization on modern matrix multiplication units.” For these reasons, FLOPs are a particularly poor proxy for latency time.\nSimilarly, the number of parameters is a poor indicator of memory consumption during training. Again from the ResNet-RS paper, “parameter count does not necessarily dictate memory consumption during training because memory is often dominated by the size of the activations” which have to be stored to execute the backpropagation algorithm. “At inference, activations can be discarded and parameter count is a better proxy for actual memory consumption.”\nResNet-RS models are a great example of this issue: an ResNet-RS has respectively \\(3{-}4\\times\\) and \\(2\\times\\) the amount of parameters and FLOPs of a similarly accurate EfficientNet, yet it is \\(3\\times\\) as fast and consumes about \\(2\\times\\) less memory. For these reasons, it would be preferable for authors of new studies to include, together with parameter count and FLOP use, also latency and memory usage measurements.\n\n\n\n1. Vaswani, A. et al. Attention is all you need. in Advances in neural information processing systems 30: Annual conference on neural information processing systems 2017, december 4-9, 2017, long beach, CA, USA (eds. Guyon, I. et al.) 5998–6008 (2017).\n\n\n2. Devlin, J., Chang, M.-W., Lee, K. & Toutanova, K. BERT: Pre-training of deep bidirectional transformers for language understanding. in Proceedings of the 2019 conference of the north american chapter of the association for computational linguistics: Human language technologies, NAACL-HLT 2019, minneapolis, MN, USA, june 2-7, 2019, volume 1 (long and short papers) (eds. Burstein, J., Doran, C. & Solorio, T.) 4171–4186 (Association for Computational Linguistics, 2019). doi:10.18653/v1/n19-1423.\n\n\n3. Shoeybi, M. et al. Megatron-LM: Training multi-billion parameter language models using model parallelism. CoRR abs/1909.08053, (2019).\n\n\n4. Raffel, C. et al. Exploring the limits of transfer learning with a unified text-to-text transformer. J. Mach. Learn. Res. 21, 140:1–140:67 (2020).\n\n\n5. Radford, A. Improving language understanding with unsupervised learning. OpenAI (2019).\n\n\n6. Radford, A. Better language models and their implications. OpenAI (2018).\n\n\n7. Brown, T. B. et al. Language models are few-shot learners. in Advances in neural information processing systems 33: Annual conference on neural information processing systems 2020, NeurIPS 2020, december 6-12, 2020, virtual (eds. Larochelle, H., Ranzato, M., Hadsell, R., Balcan, M.-F. & Lin, H.-T.) (2020).\n\n\n8. Kaplan, J. et al. Scaling laws for neural language models. CoRR abs/2001.08361, (2020).\n\n\n9. Hernandez, D., Kaplan, J., Henighan, T. & McCandlish, S. Scaling laws for transfer. CoRR abs/2102.01293, (2021).\n\n\n10. Bello, I., Zoph, B., Le, Q., Vaswani, A. & Shlens, J. Attention augmented convolutional networks. in 2019 IEEE/CVF international conference on computer vision, ICCV 2019, seoul, korea (south), october 27 - november 2, 2019 3285–3294 (IEEE, 2019). doi:10.1109/ICCV.2019.00338.\n\n\n11. Parmar, N. et al. Stand-alone self-attention in vision models. in Advances in neural information processing systems 32: Annual conference on neural information processing systems 2019, NeurIPS 2019, december 8-14, 2019, vancouver, BC, canada (eds. Wallach, H. M. et al.) 68–80 (2019).\n\n\n12. Carion, N. et al. End-to-end object detection with transformers. in Computer vision - ECCV 2020 - 16th european conference, glasgow, UK, august 23-28, 2020, proceedings, part I (eds. Vedaldi, A., Bischof, H., Brox, T. & Frahm, J.-M.) vol. 12346 213–229 (Springer, 2020).\n\n\n13. Wu, B. et al. Visual transformers: Token-based image representation and processing for computer vision. CoRR abs/2006.03677, (2020).\n\n\n14. Bello, I. LambdaNetworks: Modeling long-range interactions without attention. CoRR abs/2102.08602, (2021).\n\n\n15. Parmar, N. et al. Image transformer. in Proceedings of the 35th international conference on machine learning, ICML 2018, stockholmsmässan, stockholm, sweden, july 10-15, 2018 (eds. Dy, J. G. & Krause, A.) vol. 80 4052–4061 (PMLR, 2018).\n\n\n16. Ho, J., Kalchbrenner, N., Weissenborn, D. & Salimans, T. Axial attention in multidimensional transformers. CoRR abs/1912.12180, (2019).\n\n\n17. Han, K. et al. A survey on visual transformer. CoRR abs/2012.12556, (2020).\n\n\n18. Khan, S. et al. Transformers in vision: A survey. CoRR abs/2101.01169, (2021).\n\n\n19. Dosovitskiy, A. et al. An image is worth 16x16 words: Transformers for image recognition at scale. in International conference on learning representations (2021).\n\n\n20. Touvron, H. et al. Training data-efficient image transformers & distillation through attention. CoRR abs/2012.12877, (2020).\n\n\n21. Huang, G., Sun, Y., Liu, Z., Sedra, D. & Weinberger, K. Q. Deep networks with stochastic depth. in Computer vision - ECCV 2016 - 14th european conference, amsterdam, the netherlands, october 11-14, 2016, proceedings, part IV (eds. Leibe, B., Matas, J., Sebe, N. & Welling, M.) vol. 9908 646–661 (Springer, 2016).\n\n\n22. Cubuk, E. D., Zoph, B., Shlens, J. & Le, Q. RandAugment: Practical automated data augmentation with a reduced search space. in Advances in neural information processing systems 33: Annual conference on neural information processing systems 2020, NeurIPS 2020, december 6-12, 2020, virtual (eds. Larochelle, H., Ranzato, M., Hadsell, R., Balcan, M.-F. & Lin, H.-T.) (2020).\n\n\n23. Zhang, H., Cissé, M., Dauphin, Y. N. & Lopez-Paz, D. Mixup: Beyond empirical risk minimization. in 6th international conference on learning representations, ICLR 2018, vancouver, BC, canada, april 30 - may 3, 2018, conference track proceedings (OpenReview.net, 2018).\n\n\n24. Yun, S. et al. CutMix: Regularization strategy to train strong classifiers with localizable features. in 2019 IEEE/CVF international conference on computer vision, ICCV 2019, seoul, korea (south), october 27 - november 2, 2019 6022–6031 (IEEE, 2019). doi:10.1109/ICCV.2019.00612.\n\n\n25. Zhong, Z., Zheng, L., Kang, G., Li, S. & Yang, Y. Random erasing data augmentation. in The thirty-fourth AAAI conference on artificial intelligence, AAAI 2020, the thirty-second innovative applications of artificial intelligence conference, IAAI 2020, the tenth AAAI symposium on educational advances in artificial intelligence, EAAI 2020, new york, NY, USA, february 7-12, 2020 13001–13008 (AAAI Press, 2020).\n\n\n26. Srivastava, N., Hinton, G. E., Krizhevsky, A., Sutskever, I. & Salakhutdinov, R. Dropout: A simple way to prevent neural networks from overfitting. J. Mach. Learn. Res. 15, 1929–1958 (2014).\n\n\n27. Tan, M. & Le, Q. V. EfficientNet: Rethinking model scaling for convolutional neural networks. in Proceedings of the 36th international conference on machine learning, ICML 2019, 9-15 june 2019, long beach, california, USA (eds. Chaudhuri, K. & Salakhutdinov, R.) vol. 97 6105–6114 (PMLR, 2019).\n\n\n28. Srinivas, A. et al. Bottleneck transformers for visual recognition. CoRR abs/2101.11605, (2021).\n\n\n29. Hu, J., Shen, L., Albanie, S., Sun, G. & Wu, E. Squeeze-and-excitation networks. IEEE Trans. Pattern Anal. Mach. Intell. 42, 2011–2023 (2020).\n\n\n30. Elfwing, S., Uchibe, E. & Doya, K. Sigmoid-weighted linear units for neural network function approximation in reinforcement learning. Neural Networks 107, 3–11 (2018).\n\n\n31. Chu, X. et al. Conditional positional encodings for vision transformers. CoRR abs/2102.10882, (2021).\n\n\n32. Han, K. et al. Transformer in transformer. CoRR abs/2103.00112, (2021).\n\n\n33. Zhou, D. et al. DeepViT: Towards deeper vision transformer. CoRR abs/2103.11886, (2021).\n\n\n34. Ying, C., Ke, G., He, D. & Liu, T.-Y. LazyFormer: Self attention with lazy update. CoRR abs/2102.12702, (2021).\n\n\n35. Touvron, H., Cord, M., Sablayrolles, A., Synnaeve, G. & Jégou, H. Going deeper with image transformers. CoRR abs/2103.17239, (2021).\n\n\n36. Zhang, H., Dauphin, Y. N. & Ma, T. Fixup initialization: Residual learning without normalization. in 7th international conference on learning representations, ICLR 2019, new orleans, LA, USA, may 6-9, 2019 (OpenReview.net, 2019).\n\n\n37. De, S. & Smith, S. L. Batch normalization biases residual blocks towards the identity function in deep networks. in Advances in neural information processing systems 33: Annual conference on neural information processing systems 2020, NeurIPS 2020, december 6-12, 2020, virtual (eds. Larochelle, H., Ranzato, M., Hadsell, R., Balcan, M.-F. & Lin, H.-T.) (2020).\n\n\n38. Shazeer, N., Lan, Z., Cheng, Y., Ding, N. & Hou, L. Talking-heads attention. CoRR abs/2003.02436, (2020).\n\n\n39. Brock, A., De, S., Smith, S. L. & Simonyan, K. High-performance large-scale image recognition without normalization. CoRR abs/2102.06171, (2021).\n\n\n40. d’Ascoli, S. et al. ConViT: Improving vision transformers with soft convolutional inductive biases. CoRR abs/2103.10697, (2021).\n\n\n41. Cordonnier, J.-B., Loukas, A. & Jaggi, M. On the relationship between self-attention and convolutional layers. in 8th international conference on learning representations, ICLR 2020, addis ababa, ethiopia, april 26-30, 2020 (OpenReview.net, 2020).\n\n\n42. Yuan, K. et al. Incorporating convolution designs into visual transformers. CoRR abs/2103.11816, (2021).\n\n\n43. Li, Y., Zhang, K., Cao, J., Timofte, R. & Gool, L. V. LocalViT: Bringing locality to vision transformers. CoRR abs/2104.05707, (2021).\n\n\n44. Yuan, L. et al. Tokens-to-token ViT: Training vision transformers from scratch on ImageNet. CoRR abs/2101.11986, (2021).\n\n\n45. Sandler, M., Howard, A. G., Zhu, M., Zhmoginov, A. & Chen, L.-C. MobileNetV2: Inverted residuals and linear bottlenecks. in 2018 IEEE conference on computer vision and pattern recognition, CVPR 2018, salt lake city, UT, USA, june 18-22, 2018 4510–4520 (IEEE Computer Society, 2018). doi:10.1109/CVPR.2018.00474.\n\n\n46. Wang, W. et al. Pyramid vision transformer: A versatile backbone for dense prediction without convolutions. CoRR abs/2102.12122, (2021).\n\n\n47. Pan, Z., Zhuang, B., Liu, J., He, H. & Cai, J. Scalable visual transformers with hierarchical pooling. CoRR abs/2103.10619, (2021).\n\n\n48. Liu, Z. et al. Swin transformer: Hierarchical vision transformer using shifted windows. CoRR abs/2103.14030, (2021).\n\n\n49. Heo, B. et al. Rethinking spatial dimensions of vision transformers. CoRR abs/2103.16302, (2021).\n\n\n50. Graham, B. et al. LeViT: A vision transformer in ConvNet’s clothing for faster inference. CoRR abs/2104.01136, (2021).\n\n\n51. Hendrycks, D. & Gimpel, K. Bridging nonlinearities and stochastic regularizers with gaussian error linear units. CoRR abs/1606.08415, (2016).\n\n\n52. Chen, C.-F., Fan, Q. & Panda, R. CrossViT: Cross-attention multi-scale vision transformer for image classification. CoRR abs/2103.14899, (2021).\n\n\n53. Wu, H. et al. CvT: Introducing convolutions to vision transformers. CoRR abs/2103.15808, (2021).\n\n\n54. Chollet, F. Xception: Deep learning with depthwise separable convolutions. in 2017 IEEE conference on computer vision and pattern recognition, CVPR 2017, honolulu, HI, USA, july 21-26, 2017 1800–1807 (IEEE Computer Society, 2017). doi:10.1109/CVPR.2017.195.\n\n\n55. Zhang, P. et al. Multi-scale vision longformer: A new vision transformer for high-resolution image encoding. CoRR abs/2103.15358, (2021).\n\n\n56. Beltagy, I., Peters, M. E. & Cohan, A. Longformer: The long-document transformer. CoRR abs/2004.05150, (2020).\n\n\n57. Vaswani, A. et al. Scaling local self-attention for parameter efficient visual backbones. CoRR abs/2103.12731, (2021).\n\n\n58. Xie, J., Zeng, R., Wang, Q., Zhou, Z. & Li, P. So-ViT: Mind visual tokens for vision transformer. CoRR abs/2104.10935, (2021).\n\n\n59. Canziani, A., Paszke, A. & Culurciello, E. An analysis of deep neural network models for practical applications. CoRR abs/1605.07678, (2016).\n\n\n\n\n",
    "preview": "posts/2021-04-28-transformers-in-vision/ViT.gif",
    "last_modified": "2021-04-28T11:48:31+02:00",
    "input_file": {},
    "preview_width": 842,
    "preview_height": 801
  }
]
